@page "/user/viewuser/{id}"
@attribute [Authorize]
@inject IUserService UserService
@inject NavigationManager navManager
@inject VendingOperator.Client.Shared.PageHistoryState PageHistoryState

<h1>View User</h1>
<br />

<table class="table col-md-6">
    <tbody>
        <tr>
            <th scope="row">Id</th>
            <td>@user.Id</td>
        </tr>
        <tr>
            <th scope="row">First Name</th>
            <td>@user.FirstName</td>
        </tr>
        <tr>
            <th scope="row">Last Name</th>
            <td>@user.LastName</td>
        </tr>
        <tr>
            <th scope="row">User Name</th>
            <td>@user.Username</td>
        </tr>
        <tr>
            <th scope="row">Roles</th>
            <td>
                <ul>
                    @foreach (var role in userRoles)
                    {
                        <li>@role.RoleName</li>
                    }
                </ul>
            </td> 
        </tr>
    </tbody>
</table>

<div class="form-group">
    @if (PageHistoryState.CanGoBack())
    {
        <NavLink href="@PageHistoryState.GetGoBackPage()" class="btn btn-link">Back</NavLink>
    }
    else
    {
        <NavLink href="/user/1" class="btn btn-link">Back</NavLink>
    }
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    User user = new User();
    List<UserRoleViewModel> userRoles = new List<UserRoleViewModel>();

    protected async override Task OnParametersSetAsync()
    {
        user = await UserService.GetUser(int.Parse(Id));
        userRoles = await UserService.GetUserRoles(user.Id); // Fetch roles for the user
    }
}
